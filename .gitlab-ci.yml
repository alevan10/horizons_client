# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install --upgrade pip
  - pip install poetry
  - poetry install -v
  - export PYTHONPATH="$PYTHONPATH:$(pwd)/src"

stages:
  - Static Analysis
  - Tests
  - Build
  - Publish

Pylint:
  stage: Static Analysis
  script:
    - pylint -d C0301 src/horizons_client/*.py

Black:
  stage: Static Analysis
  script:
    - python -m black . --check --verbose

Unit:
  stage: Tests
  script:
    - pytest -v ./tests/unittests

Functional:
  stage: Tests
  script:
    - pytest -v ./tests/functional

Build Package:
  stage: Build
  only:
    - main
  script:
    - poetry build --format wheel
    - cd dist
    - cp horizons_client*.whl horizons-client.whl

Publish Package:
  stage: Publish
  only:
    - main
  script:
    - git clone http://gitlab-ci-token:$CI_JOB_TOKEN@dev.levan.home/alevan/horizons-api.git
    - mv horizons-client.whl horizons_api/horizons_client/horizons-client.whl
    - cd horizons_api
    - export VERSION="$(poetry version | awk 'END {print $NF}')"
    - git checkout -b "ruthie/update_horizons_client_$VERSION" && git add -A && git commit -m "Updating to horizons client version $VERSION" && git push -o merge_request.create
